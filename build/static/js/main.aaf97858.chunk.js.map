{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/Persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","persons","handleDeletePerson","map","person","key","name","number","onClick","Filter","filterString","onChange","value","PersonForm","props","onSubmit","onNameChange","onNumberChange","type","baseUrl","axios","get","then","response","data","post","put","id","delete","Notification","message","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","includes","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterString","setMessage","useEffect","personService","initialPersons","handleMessage","setTimeout","personsToShow","filter","toLowerCase","indexOf","event","target","preventDefault","personObject","some","result","window","confirm","find","p","changedPerson","returnedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aaf97858.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({persons, handleDeletePerson}) => {\n    return (\n        <>\n        {persons.map((person) =>\n          <div key={person.name}>\n              {person.name} {person.number} {''}\n              <button onClick={() => handleDeletePerson(person)}>delete</button>\n          </div>\n        )}\n        </>\n    )\n}\n\nexport default Persons","import React from \"react\";\n\nconst Filter = ({filterString, onChange}) => {\n    return (\n        <div>\n            filter shown with\n            <input value={filterString} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = (props) => {\n    return (\n    <form onSubmit={props.onSubmit}>\n        <div>name: <input value={props.name} onChange={props.onNameChange}/></div>\n        <div>number:<input value={props.number} onChange={props.onNumberChange}/></div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = 'https://phonebook-part3.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = person => {\n    const request = axios.post(baseUrl, person)\n    return request.then(response => response.data)\n}\n\nconst update = (person) => {\n    const request = axios.put(`${baseUrl}/${person.id}`, person)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from \"react\";\n\nconst Notification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    if (message === null) {\n        return null\n    } else if (message.includes('has already been removed from the server')){\n        notificationStyle.color = 'red'\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/Persons\"\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName ] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterString, setFilterString] = useState('')\n    const [message, setMessage] = useState(null)\n\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const handleNameChange = event => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = event => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = event => {\n        setFilterString(event.target.value)\n    }\n\n    const handleMessage = (message) => {\n        setMessage(message)\n\n        setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {name: newName, number: newNumber}\n\n        if (!persons.some( person => person.name === newName )) {\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    handleMessage(`Added ${returnedPerson.name}`)\n                })\n        } else {\n            const result = window.confirm(\n                `${newName} is already added to phonebook, replace the old number with a new one?`)\n            const person = persons.find(p => p.name === newName)\n            const changedPerson = { ...person, number: newNumber }\n\n            if (result) {\n                personService\n                    .update(changedPerson).then(returnedPerson => {\n                    setPersons(persons.map(person =>\n                        person.name !== newName ? person : returnedPerson))\n                    handleMessage(`Changed ${returnedPerson.name}`)\n\n                })\n                    .catch(error => {\n                        setPersons(persons.filter(p => p.name !== newName))\n                        handleMessage(`Information of ${newName}  has already been removed from the server`)\n                    })\n            }\n        }\n\n\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleDeletePerson= person => {\n        const result = window.confirm(`Delete ${person.name} ?`)\n        if (result) {\n            personService\n                .remove(person.id)\n                .then(data => {\n                    setPersons(persons.filter(p => p.name !== person.name))\n                    handleMessage(`deleted ${person.name}`)\n                })\n        }\n    }\n\n    const personsToShow = filterString\n        ? persons.filter(person => person.name.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)\n        : persons\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification message={message} />\n\n            <Filter filterString={filterString} onChange={handleFilterChange} />\n\n            <h2>add a new</h2>\n\n            <PersonForm\n                onSubmit={addPerson}\n                name={newName} onNameChange={handleNameChange}\n                number={newNumber} onNumberChange={handleNumberChange}\n            />\n\n            <h2>Numbers</h2>\n\n            <Persons persons={personsToShow} handleDeletePerson={handleDeletePerson} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}