{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/Persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","persons","handleDeletePerson","map","person","key","name","number","onClick","Filter","filterString","onChange","value","PersonForm","props","onSubmit","onNameChange","onNumberChange","type","baseUrl","axios","get","then","response","data","post","put","id","delete","Notification","notification","className","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterString","setNotification","useEffect","personService","initialPersons","notifyWith","setTimeout","personsToShow","filter","toLowerCase","indexOf","event","target","preventDefault","personObject","some","result","window","confirm","find","p","changedPerson","returnedPerson","catch","error","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.676efcc7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({persons, handleDeletePerson}) => {\n    return (\n        <>\n        {persons.map((person) =>\n          <div key={person.name}>\n              {person.name} {person.number} {''}\n              <button onClick={() => handleDeletePerson(person)}>delete</button>\n          </div>\n        )}\n        </>\n    )\n}\n\nexport default Persons","import React from \"react\";\n\nconst Filter = ({filterString, onChange}) => {\n    return (\n        <div>\n            filter shown with\n            <input value={filterString} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = (props) => {\n    return (\n    <form onSubmit={props.onSubmit}>\n        <div>name: <input value={props.name} onChange={props.onNameChange}/></div>\n        <div>number:<input value={props.number} onChange={props.onNumberChange}/></div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = person => {\n    const request = axios.post(baseUrl, person)\n    return request.then(response => response.data)\n}\n \nconst update = (person) => {\n    const request = axios.put(`${baseUrl}/${person.id}`, person)\n    return request.then(response =>  response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/Persons\"\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName ] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterString, setFilterString] = useState('')\n    const [ notification, setNotification ] = useState(null)\n\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const handleNameChange = event => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = event => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = event => {\n        setFilterString(event.target.value)\n    }\n\n    const notifyWith = (message, type='success') => {\n        setNotification({ message, type })\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {name: newName, number: newNumber}\n\n        if (!persons.some( person => person.name === newName )) {\n            personService\n                .create(personObject)\n                .then(createdPerson => {\n                    setPersons(persons.concat(createdPerson))\n                    notifyWith(`Added ${newName}`)\n                })\n                .catch(error => {\n                        notifyWith(`${error.response.data.error}`, 'error')\n                })\n        } else {\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n            const person = persons.find(p => p.name === newName)\n            const changedPerson = { ...person, number: newNumber }\n\n            if (result) {\n                personService\n                    .update(changedPerson).then(returnedPerson => {\n                    setPersons(persons.map(person =>\n                        person.name !== newName ? person : returnedPerson))\n                    notifyWith(`Changed ${newName}`)\n\n                })\n                    .catch(error => {\n                        setPersons(persons.filter(p => p.name !== newName))\n                        notifyWith(`Information of ${newName}  has already been removed from the server`, 'error')\n                    })\n            }\n        }\n\n\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleDeletePerson= person => {\n        const result = window.confirm(`Delete ${person.name} ?`)\n        if (result) {\n            personService\n                .remove(person.id)\n                .then(data => {\n                    setPersons(persons.filter(p => p.name !== person.name))\n                    notifyWith(`deleted ${person.name}`)\n                })\n        }\n    }\n\n    const personsToShow = filterString\n        ? persons.filter(person => person.name.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)\n        : persons\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification notification={notification} />\n\n            <Filter filterString={filterString} onChange={handleFilterChange} />\n\n            <h2>add a new</h2>\n\n            <PersonForm\n                onSubmit={addPerson}\n                name={newName} onNameChange={handleNameChange}\n                number={newNumber} onNumberChange={handleNumberChange}\n            />\n\n            <h2>Numbers</h2>\n\n            <Persons persons={personsToShow} handleDeletePerson={handleDeletePerson} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}